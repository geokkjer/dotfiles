# Created 2023-05-23 ti. 14:47
#+title: Kubernetes at Home
#+author: Geir Okkenhaug Jerstad
#+export_file_name: README.org

* Operator - Orchestrator - tools for you!

Hey, that's us. The human interacting with the system.

** NixOS k8s-tools

#+begin_src nix
  { config, pkgs, ... }:
  {
    environment.systemPackages = with pkgs; [
      kubectl
      k9s
      kubernetes-helm
      k3sup
    ];
  }
#+end_src

** emacs k8s
** git provider

* Infra and OS/kubernetes

the infrastructure is rather bare, as this is my home-lab. It has one machine for k8s(12 core xeon with 32 gb ram), one for remote storage(TrueNAS for now, TODO: switch to NixOS or distributed storage inside the cluster) and one for dns(currently pihole) and a router (openwrt :TODO maybe opnsense is a better fit)

** Talos

Talos serves a minimal k8s distribution on top of a minimal Linux base. api driven configuration with talosctl and yaml files.
:TODO this whole section

#+begin_src shell

#+end_src

** Alpine/K3s

Alpine Linux is a minimal Linux distribution . It use Openrc and the apk package manager
It serves as a stable minimal base upon we can run the minimal k3s kubernetes distro.
Reducing the attack surface and leverage the apko/melange/wolfi chainguard container creation.

*** Install OS
No real fuzz here. Alpine linux is really easy to install.
Refer to [[https://wiki.alpinelinux.org/wiki/Installation][Install Alpine]] if you need to.

#+begin_src bash
  setup-alpine
#+end_src

*** Install K3s

#+begin_src shell
  k3sup
#+end_src

* GitOps
** Flux
* VPN
wireguard - tail/headscale??xxxxxx
* External Loadbalancer/reverse-proxy
** metallb
* Ingress
** Traefik
* Certs
** Let's encrypt
* DNS
** externalDNS ??
* Storage
** nfs
** distributed storage ceph
* Security
** scanning - trivy
** integrity/identity - spiffe/spire
* Containers
** Wolfi os/apko/melange
** NixOS containers
** external containers
** sigstore chainguard
* Build CI/CD
** tekon/jenkinsX
* Sources and inspiration
Basicly what I read when creating this home-lab setup.
