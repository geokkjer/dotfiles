#+title: The Router - NixOS configuration
#+EXPORT_FILE_NAME: README.org

* Bootstrap

backup org conf and remove other files from /etc/nixos
As root or sudo

#+begin_src shell

  ln -s /home/user-name/configs /etc/nixos

#+end_src

* Hardware

#+begin_src nix

  { config, lib, pkgs, modulesPath, ... }:


  {
    imports =[ (modulesPath + "/installer/scan/not-detected.nix") ];

    boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usb_storage" "sd_mod" ];
    boot.initrd.kernelModules = [ ];
    boot.kernelModules = [ "kvm-intel" ];
    boot.extraModulePackages = [ ];

    fileSystems."/" =
      { device = "/dev/disk/by-uuid/";
        fsType = "ext4";
      };

    fileSystems."/boot" =
      { device = "/dev/disk/by-uuid/256A-2C3F";
        fsType = "vfat";
      };

    fileSystems."/home" =
      { device = "/dev/disk/by-uuid/8c02afc3-d3a7-41d0-b5cc-43391fa4d0b3";
        fsType = "ext4";
      };

    swapDevices = [ ];

    # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
    # (the default) this is the recommended approach. When using systemd-networkd it's
    # still possible to use this option, but it's recommended to use it in conjunction
    # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
    # networking.useDHCP = lib.mkDefault true;
    # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

    nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
    hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  }

#+end_src

* OS

#+begin_src nix

#+end_src
