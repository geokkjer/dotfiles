#+title: NixOS configuration for the-sober-counsel
#+EXPORT_FILE_NAME: README.org

* Welcome/bootstrap

This is an attempt to configure NixOS from an Emacs document usidn org-babel to tangle config files

Install NixOS as you would noramlly from the iso -> run the code blocks in this file -> rebuild your system with:

#+begin_src shell

  sudo nixos-rebuild boot --upgrade
  
#+end_src

* NixOS
** Setup

tangle this document with C-c C-v t then change ownership and symlink out folder to /etc/nixos/

#+begin_src shell
  ln -s ~/configs /etc/nixos
#+end_src
** From here we create the configuration.nix configuration

#+begin_src nix :tangle ~/nixos-conf/the-sober-counsel/configuration.nix :mkdirp yes
  #
  # This file is auto-generated from "the-sober-counsel.org"
  #

  { config, pkgs, ... }:

  {
    imports =
      [ 

      ];
    # Hardware

    # NFS
    #fileSystems."/home/geir/media" = {
    #  device = "192.168.1.119:/mnt/storage/media";
    #  fsType = "nfs";
    #};
    services.fstrim.enable = true;
  
    # Enable all unfree hardware support.
    hardware.firmware = with pkgs; [ firmwareLinuxNonfree ];
    hardware.enableAllFirmware = true;
    hardware.enableRedistributableFirmware = true;
    nixpkgs.config.allowUnfree = true;

    # Bootloader and Kernel
    boot.loader.systemd-boot.enable = true;
    boot.loader.efi.canTouchEfiVariables = true;
    boot.loader.efi.efiSysMountPoint = "/boot/efi";
    boot.loader.systemd-boot.memtest86.enable = true;
    boot.kernelPackages = pkgs.linuxPackages_latest;
    boot.kernel.sysctl = {
      "net.ipv4.conf.all.forwarding" = 1;
      "net.ipv4.conf.default.forwarding" = 1;
      "net.ipv6.conf.all.forwarding" = "1";  
    };

    # Networking
    networking.networkmanager.enable = true;
    networking.hostName = "the-sober-counsel"; # Define your hostname.

    #networking.useDHCP = true;
    #networking = {
    #  defaultGateway = { address = "192.168.1.1"; interface = "enp4s0"; };
    #  interfaces.enp4s0 = {
    #      ipv4.addresses = [
    #          { address = "192.168.1.100"; prefixLength = 24; }
    #      ];
    #   };
    #  interfaces.enp6s0 = {
    #      useDHCP = true;
    #    };

      #interfaces.br0 = {
      #  useDHCP = true;
      #};
      #bridges = {
      #"br0" = {
      #   interfaces = [ "enp6s0" ];
      #   };
      #};
      #nat.enable = true;
      #nat.internalIPs = [ "10.1.1.0/24" ];
      #nat.internalInterfaces = [ "br0" ];
      #nat.externalInterface = "enp4s0";
    # };

    # Set your time zone.
    time.timeZone = "Europe/Oslo";

    # Select internationalisation properties.
    i18n.defaultLocale = "en_US.utf8";
    # Configure console keymap
    console = {
       font = "Lat2-Terminus16";
       keyMap = "no";
     };


    i18n.extraLocaleSettings = {
      LC_ADDRESS = "nb_NO.utf8";
      LC_IDENTIFICATION = "nb_NO.utf8";
      LC_MEASUREMENT = "nb_NO.utf8";
      LC_MONETARY = "nb_NO.utf8";
      LC_NAME = "nb_NO.utf8";
      LC_NUMERIC = "nb_NO.utf8";
      LC_PAPER = "nb_NO.utf8";
      LC_TELEPHONE = "nb_NO.utf8";
      LC_TIME = "nb_NO.utf8";
    };

    # Enable the X11 windowing system.
    services.xserver.enable = true;
    services.xserver.videoDrivers = [ "amdgpu" ];

    # Enable the Gnome Desktop Environment.
    services.xserver.displayManager.gdm.enable = true;
    services.xserver.desktopManager.gnome.enable = true;
    programs.steam.enable = true;

    # Configure keymap in X11
    services.xserver = {
      layout = "no";
      xkbVariant = "";
    };

    # Enable CUPS to print documents.
    services.printing.enable = false;

    # Enable sound with pipewire.
    sound.enable = true;
    hardware.pulseaudio.enable = false;
    security.rtkit.enable = true;
    services.pipewire = {
      enable = true;
      alsa.enable = true;
      alsa.support32Bit = true;
      pulse.enable = true;
      # If you want to use JACK applications, uncomment this
      #jack.enable = true;
    };

    # List packages installed in system profile. To search, run:
    # $ nix search wget
    environment.systemPackages = with pkgs; [
      vim sshfs
      wget curl git
      htop glances
      microcodeAmd
      emacs screen
      calibre
    ];

    # List services that you want to enable:

    # OpenSSH daemon.
    services.openssh.enable = true;
    # Flatpack 
    services.flatpak.enable = true;
    # Fwupd
    services.fwupd.enable = true;
    # Tailscale
    services.tailscale.enable = true;
    networking.firewall.checkReversePath = "loose";

    # Enable home-manager
    # programs.home-manager = {
    #    enable = true;
    #   };
    # Open ports in the firewall.
    # networking.firewall.allowedTCPPorts = [ ... ];
    # networking.firewall.allowedUDPPorts = [ ... ];
    # Or disable the firewall altogether.
    networking.firewall.enable = false;


    system.stateVersion = "22.05";

  }

#+end_src

** App Configuration
*** Alacritty

#+begin_src yaml :tangle ~/.config/alacritty/alacritty.yml :mkdirp yes
  font:
    normal:
      family: MesloLGS NF
      style: Regular
    bold:
      family:  MesloLGS NF
      style: Bold

    italic:
      family:  MesloLGS NF
      style: Italic

    bold_italic:
      family:  MesloLGS NF
      style: Bold Italic

    size: 14

  import:
    - ~/.config/alacritty/dracula.yml

#+end_src

#+begin_src conf-unix :tangle ~/.config/alacritty/dracula.yml :mkdirp yes
# Colors (Dracula)
colors:
  # Default colors
  primary:
    background: '0x282a36'
    foreground: '0xf8f8f2'
 
  # Normal colors
  normal:
    black:   '0x000000'
    red:     '0xff5555'
    green:   '0x50fa7b'
    yellow:  '0xf1fa8c'
    blue:    '0xbd93f9'
    magenta: '0xff79c6'
    cyan:    '0x8be9fd'
    white:   '0xbbbbbb'
 
  # Bright colors
  bright:
    black:   '0x555555'
    red:     '0xff5555'
    green:   '0x50fa7b'
    yellow:  '0xf1fa8c'
    blue:    '0xcaa9fa'
    magenta: '0xff79c6'
    cyan:    '0x8be9fd'
    white:   '0xffffff'

#+end_src

* Sources and Inspiration

- [[https://www.alexeyshmalko.com/2020/literate-config/][4 Years with Literate Configuration]]

  
